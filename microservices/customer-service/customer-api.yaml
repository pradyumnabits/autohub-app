openapi: 3.0.2
info:
  title: Customer API
  description: API for managing customer data
  version: 1.0.0

paths:
  /customers:
    get:
      summary: Get all customers
      description: Retrieve a list of all customers.
      responses:
        200:
          description: A list of customers.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerResponse'
    post:
      summary: Create a new customer
      description: Add a new customer to the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        201:
          description: Customer created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'

  /customers/{userId}:
    get:
      summary: Get a customer by ID
      description: Retrieve a single customer by their userId.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: The requested customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        404:
          description: Customer not found.

    put:
      summary: Update an existing customer
      description: Modify the details of an existing customer by userId.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        200:
          description: Customer updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
        404:
          description: Customer not found.

    delete:
      summary: Deactivate a customer
      description: Mark a customer as 'inactive' by updating their profileStatus.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Customer deactivated successfully.
        404:
          description: Customer not found.

components:
  schemas:
    Customer:
      type: object
      properties:
        userId:
          type: string
          description: Unique identifier for the customer.
        firstName:
          type: string
          description: First name of the customer.
        lastName:
          type: string
          description: Last name of the customer.
        email:
          type: string
          description: Email address of the customer.
        phoneNumber:
          type: string
          description: Phone number of the customer.
        address:
          type: string
          description: Address of the customer.
        profileStatus:
          type: string
          description: Status of the customer profile.
          default: ACTIVE

    CustomerResponse:
      type: object
      properties:
        userId:
          type: string
          description: Unique identifier for the customer.
        firstName:
          type: string
          description: First name of the customer.
        lastName:
          type: string
          description: Last name of the customer.
        email:
          type: string
          description: Email address of the customer.
        phoneNumber:
          type: string
          description: Phone number of the customer.
        address:
          type: string
          description: Address of the customer.
        profileStatus:
          type: string
          description: Status of the customer profile.
          default: ACTIVE
